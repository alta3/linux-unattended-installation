# ROUTER RULES
# ===================================================================
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
# Note: FORWARD rules impact routing permissions, therefore FORWARD rules
#       accept or reject, but do not change anything like a NAT funtion 
#       See PREROUTING for NAT and port forwarding
# Allowing established inbound traffic
-A FORWARD -i {{ outside_interface.name }} -o {{ inside_interface.name }} -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# Allowing established outbound traffic
-A FORWARD -i {{ inside_interface.name }}  -o {{ outside_interface.name }} -j ACCEPT

{% for target in nat_targets %}
# Allowing traffic for {{ target.name }}
-A FORWARD -i {{ outside_interface.name }} -o {{ inside_interface.name }} -p tcp -m tcp --dport {{ target.dport }}  --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -j ACCEPT
{% endfor %}

COMMIT
# PREROUTING rules handle NAT functions which changes:
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
{% for target in nat_targets %}
# NAT traffic for "{{ target.name }}" 
-A PREROUTING -i {{ outside_interface.name }} -p tcp -m tcp --dport {{ target.dport }} -j DNAT --to-destination {{ target.dnat }}
{% endfor %}

-A POSTROUTING -o {{ outside_interface.name }} -j MASQUERADE
COMMIT
