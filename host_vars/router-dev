## ====DEVELOPMENT===========
ansible_host: "{{ lookup('env','ANSIBLE_HOST') }}"
hostname: "{{ lookup('env','HOSTNAME') }}"
domain: "{{ lookup('env','DOMAIN') }}"
config_pass: "{{ lookup('env','CONFIG_PASS') }}"
public_dns: "{{ lookup('env','PUBLIC_DNS') }}"
##=====TODO========================================
## Create a DEV env file looking like this:
## ANSIBLE_HOST=10.32.0.1
## Edit this file to look like this:
## ansible_host: {{ lookup('env','ANSIBLE_HOST') }}
## ================================================
boot_disk: "{{ lookup('env','BOOT_DISK') }}"
usb_stick: "{{ lookup('env','USB_STICK') }}"
seed_file: "{{ lookup('env','SEED_FILE') }}"
key_path: "{{ lookup('env','KEY_PATH') }}"

development: "{{ lookup('env','DEVELOPMENT') }}"
integration: "{{ lookup('env','INTEGRATION') }}"
production: "{{ lookup('env','PRODUCTION') }}"
host_desc_one_liner: "{{ lookup('env','HOST_DESC_ONE_LINER') }}"

AuthorizedKeysFile:
- "{{ lookup('env','AUTHORIZED_KEYS_FILE_1') }}"
- /"{{ lookup('env','AUTHORIZED_KEYS_FILE_2') }}"

## Setting name: "auto" causes the playbook to assign the outside interface to the first ethernet interface
outside_interface:
  ip: "{{ lookup('env','OUTSIDE_INTERFACE_IP') }}"  SEAN--->>>>   ip: "{{ lookup('env','DEV_OUTSIDE_IP') }}"
  cidr: "{{ lookup('env','OUTSIDE_INTERFACE_CIDR') }}"            cidr: "{{ lookup('env','DEV_OUTSIDE_CIDR') }}"
  gw: "{{ lookup('env','OUTSIDE_INTERFACE_GW') }}"                gw: "{{ lookup('env','DEV_OUTSIDE_GW') }}"
  mask: "{{ lookup('env','OUTSIDE_INTERFACE_MASK') }}"            mask: "{{ lookup('env','DEV_OUTSIDE_MASK') }}"
  name: "{{ lookup('env','OUTSIDE_INTERFACE_NAME') }}"            name: "{{ lookup('env','DEV_OUTSIDE_NAME') }}"
  sams:
#  - ip: "{{ lookup('env','SOME_OUTSIDE_IP') }}"  # Use this when adding a secondary address to the outside (INTEGRATION for instance)

## Setting name: "auto" causes the playbook to assign the inside interface to the second ethernet interface
inside_interface:
  ip: "{{ lookup('env','DEV_INSIDE_IP') }}"
  cidr: "{{ lookup('env','DEV_INSIDE_CIDR') }}"
  mask: "{{ lookup('env','DEV_INSIDE_MASK') }}"
  name: "{{ lookup('env','DEV_INSIDE_NAME') }}"


## Setting targets here will create iptables forwarding rules
## Please create a name of the form "PROTOCOL to HOST"
nat_targets:
- dport: "{{ lookup('env','NAT_SSH_DPORT') }}"
  dnat: "{{ lookup('env','NAT_SSH_DNAT') }}"
  name: "{{ lookup('env','NAT_SSH_NAME') }}"

- dport: "{{ lookup('env','NAT_HTTP_DPORT') }}"
  dnat: "{{ lookup('env','NAT_HTTP_DNAT') }}"
  name: "{{ lookup('env','NAT_HTTP_NAME') }}"

- dport: "{{ lookup('env','NAT_HTTPS_DPORT') }}"
  dnat: "{{ lookup('env','NAT_HTTPS_DNAT') }}"
  name: "{{ lookup('env','NAT_HTTPS_NAME') }}"

- dport: "{{ lookup('env','NAT_SFTP_DPORT') }}"
  dnat: "{{ lookup('env','NAT_SFTP_DNAT') }}"
  name: "{{ lookup('env','NAT_SFTP_NAME') }}"
